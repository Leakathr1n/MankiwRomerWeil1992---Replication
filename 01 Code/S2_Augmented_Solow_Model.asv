%% Econometric Methods I Problem Set 3
% 2_Augmented Solow Model
% Barcelona School of Economics, 2025-2026
% Author: Lea Röller

%% housekeeping
clear all; close all; clc; 

cd() %specify folder path if necessary

%% load data set
load(fullfile('..','00 Clean data','MRW1992data.mat'));

%store data in one data set to make it easier to work with
MRWdata = table(country, invest, I, N, O, pop_growth, school, Y60, Y85, Y_growth);

clear country invest I N O pop_growth school Y60 Y85 Y_growth %some housekeeping
%% clean data
% We restrict our sample for now to non-oil producing countries
MRWdata_filtered = MRWdata(MRWdata.N == 1, :);
height(MRWdata_filtered) == 98 %verify we have 98 countries left
n = height(MRWdata_filtered);

clear ans MRWdata  %some housekeeping

%% setting parameters for the analysis

format bank   % shows 2 decimals for all numeric outputs
alfa     = 0.05; %signifance level to 5%

%% Exercise 1 - Calculations
%  Replication of upper panel of MRW's Table II on p. 420.

% Equation:  log(yi) = β1 + β2 log(si) + β3 log(ni + g + δ) + β4 log(hi) + εi  εi

% Generate the variables
% y = Y85 %already like this in the data set, no need to modify
MRWdata_filtered.s = MRWdata_filtered.invest / 100;           % Add s column
MRWdata_filtered.n = MRWdata_filtered.pop_growth / 100;       % Add n column
MRWdata_filtered.g_and_delta = 0.05 * ones(height(MRWdata_filtered), 1); % Add g_and_delta column
MRWdata_filtered.effective_depr = MRWdata_filtered.g_and_delta + MRWdata_filtered.n; % add the effective depreciation / break-even investment rate
MRWdata_filtered.h = MRWdata_filtered.school /100 % adding the school variable

% taking the ln/ logs of my variables
MRWdata_filtered.log_y = log(MRWdata_filtered.Y85);               % Add log(y) column
MRWdata_filtered.log_s = log(MRWdata_filtered.s);                 % Add log(s) column
MRWdata_filtered.log_effective_depr  = log(MRWdata_filtered.effective_depr); % Add log(n + g + δ) column
MRWdata_filtered.log_h = log(MRWdata_filtered.h)

X = [ones(height(MRWdata_filtered),1), MRWdata_filtered.log_s, MRWdata_filtered.log_effective_depr, MRWdata_filtered.log_h];
% y
y = MRWdata_filtered.log_y;

% Calculate beta hat
beta_hat = (X' * X) \ (X' * y);  % \ is more numerically stable than inv()

% Calculate the covariance matrix to extract the standard errors
residuals = y - X * beta_hat;          % compute residuals
k = size(X,2);                         % number of coefficients, taking out the constant!
sigma2_hat = (residuals' * residuals) / (n - k);  % estimated error variance
cov_beta = sigma2_hat * inv(X' * X);  % covariance matrix of beta_hat
se_beta = sqrt(diag(cov_beta));       % standard errors

% Calculate the R squared
y_hat = X * beta_hat; %calculate predicted values
y_bar = mean(y); % calculate mean of observed y
ESS = sum((y_hat - y_bar).^2); % Numerator: explained sum of squares
TSS = sum((y - y_bar).^2); % Denominator: total sum of squares
R2 = ESS / TSS; % R-squared
R2_adj = 1 - (1 - R2) * (n - 1) / (n - k - 1); % adjusted R-squared

% Calculate the s.e.e
s_e_e = sqrt( (residuals' * residuals) / (n - k) );

%% Exercise 1 - Export to LaTeX 

% Define variable names (include all regressors)
varNames = {'Constant', '$ln(I/GDP)$', '$ln(n+g+\delta)$', '$ln(h)$'}; 

% Extract coefficients and standard errors
coeffs = beta_hat;
SEs = se_beta;

% Output folder
outputFolder = fullfile('..','02 Outputs');
filename = fullfile(outputFolder, 'Exercise_2.1.tex');  % full path
fid = fopen(filename, 'w'); % Open file for writing

% Table header
fprintf(fid, '\\centering\n');
fprintf(fid, '\\textbf{Regression Results for Non-oil Sample} \\\\\n');
fprintf(fid, '\\begin{tabular}{lcc}\n');
fprintf(fid, '\\hline\n');

% Dependent variable
fprintf(fid, '\\multicolumn{3}{l}{Dependent variable: ln(GDP)} \\\\\n');
fprintf(fid, '\\hline\n');

% Table headers
fprintf(fid, 'Variable & Coefficient & Standard Error \\\\\n');
fprintf(fid, '\\hline\n');

% Loop over variables
for i = 1:length(varNames)
    fprintf(fid, '%s & %.2f & (%.2f) \\\\\n', varNames{i}, coeffs(i), SEs(i));
end

% Summary statistics
fprintf(fid, '\\hline\n');
fprintf(fid, 'Observations & \\multicolumn{2}{c}{%d} \\\\\n', n); 
fprintf(fid, '$R^2 & \\multicolumn{2}{c}{%.2f} \\\\\n', R2);
fprintf(fid, 'R-squared & \\multicolumn{2}{c}{%.2f} \\\\\n', R2_adj);
fprintf(fid, 's.e.e. & \\multicolumn{2}{c}{%.2f} \\\\\n', s_e_e);
fprintf(fid, '\\hline\n');

% End table
fprintf(fid, '\\end{tabular}\n');

fclose(fid);

disp(['LaTeX table exported to ', filename]);

%% Exercise 2 - Calculations
% MRW's extended Solow model predicts that β2 + β3 + β4 = 0. Test this
% restriction using an F-test.

% Restrictions
R = [0 1 1 1];  %  beta2 + beta3 + beta4 = 0
r = 0;
df_num = rank(R);
df_den = n-k;

% Perform F-test: F = (w/#r)
F = (R*beta_hat - r)' * inv(R * sigma2_hat * inv(X'*X) * R') * (R*beta_hat - r);
F_crit = finv(1 - alfa, df_num, df_den);
p_value = 1 - fcdf(F, df_num, df_den);

% Decision
decisionF = "Fail to reject $H_0$"; %write in latex format so that we can easily export
if p_value < alfa
    decisionF= "Reject $H_0$";
end

%% Exercise 2 - LaTeX

% File name to save
filename = fullfile(outputFolder, 'Exercise_2.2.tex');
fid = fopen(filename, 'w'); %open file

% Table: F-Test results
fprintf(fid, '\\noindent\\textbf{F-Test}\\\\\n');
fprintf(fid, '\\begin{tabular}{lc}\n');  % 2 columns
fprintf(fid, '\\hline\n');
fprintf(fid, 'Statistic & Value \\\\\n');  % Header
fprintf(fid, '\\hline\n');
fprintf(fid, 'F-statistic & %.2f \\\\\n', F);
fprintf(fid, 'Critical value ($\\alpha=%.2f$) & %.2f \\\\\n', alfa, F_crit);
fprintf(fid, 'p-value & %.2f \\\\\n', p_value);
fprintf(fid, '\\hline\n');
fprintf(fid, '\\multicolumn{2}{l}{Degrees of freedom: numerator = %d, denominator = %d} \\\\\n', df_num, df_den);
fprintf(fid, '\\multicolumn{2}{l}{\\textbf{Decision:} %s} \\\\\n', decisionF);
fprintf(fid, '\\end{tabular}\n\n');

fclose(fid);  % close file

disp(['LaTeX table exported to ', filename]);